-- Corrected version of the Camunda database schema script

-- Property Table
CREATE TABLE IF NOT EXISTS ACT_GE_PROPERTY (
    NAME_ VARCHAR(64),
    VALUE_ VARCHAR(300),
    REV_ INTEGER,
    PRIMARY KEY (NAME_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- Insert initial data into ACT_GE_PROPERTY
INSERT INTO ACT_GE_PROPERTY VALUES ('schema.version', 'fox', 1);
INSERT INTO ACT_GE_PROPERTY VALUES ('schema.history', 'create(fox)', 1);
INSERT INTO ACT_GE_PROPERTY VALUES ('next.dbid', '1', 1);
INSERT INTO ACT_GE_PROPERTY VALUES ('deployment.lock', '0', 1);
INSERT INTO ACT_GE_PROPERTY VALUES ('history.cleanup.job.lock', '0', 1);
INSERT INTO ACT_GE_PROPERTY VALUES ('startup.lock', '0', 1);
INSERT INTO ACT_GE_PROPERTY VALUES ('telemetry.lock', '0', 1);
INSERT INTO ACT_GE_PROPERTY VALUES ('installationId.lock', '0', 1);

-- ByteArray Table
CREATE TABLE IF NOT EXISTS ACT_GE_BYTEARRAY (
    ID_ VARCHAR(64),
    REV_ INTEGER,
    NAME_ VARCHAR(255),
    DEPLOYMENT_ID_ VARCHAR(64),
    BYTES_ LONGBLOB,
    GENERATED_ TINYINT,
    TENANT_ID_ VARCHAR(64),
    TYPE_ INTEGER,
    CREATE_TIME_ DATETIME,
    ROOT_PROC_INST_ID_ VARCHAR(64),
    REMOVAL_TIME_ DATETIME,
    PRIMARY KEY (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- Schema Log Table
CREATE TABLE IF NOT EXISTS ACT_GE_SCHEMA_LOG (
    ID_ VARCHAR(64),
    TIMESTAMP_ DATETIME,
    VERSION_ VARCHAR(255),
    PRIMARY KEY (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- Insert initial data into ACT_GE_SCHEMA_LOG
INSERT INTO ACT_GE_SCHEMA_LOG VALUES ('0', CURRENT_TIMESTAMP, '7.21.0');

-- Deployment Table
CREATE TABLE IF NOT EXISTS ACT_RE_DEPLOYMENT (
    ID_ VARCHAR(64),
    NAME_ VARCHAR(255),
    DEPLOY_TIME_ DATETIME,
    SOURCE_ VARCHAR(255),
    TENANT_ID_ VARCHAR(64),
    PRIMARY KEY (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- Execution Table
CREATE TABLE IF NOT EXISTS ACT_RU_EXECUTION (
    ID_ VARCHAR(64),
    REV_ INTEGER,
    ROOT_PROC_INST_ID_ VARCHAR(64),
    PROC_INST_ID_ VARCHAR(64),
    BUSINESS_KEY_ VARCHAR(255),
    PARENT_ID_ VARCHAR(64),
    PROC_DEF_ID_ VARCHAR(64),
    SUPER_EXEC_ VARCHAR(64),
    SUPER_CASE_EXEC_ VARCHAR(64),
    CASE_INST_ID_ VARCHAR(64),
    ACT_ID_ VARCHAR(255),
    ACT_INST_ID_ VARCHAR(64),
    IS_ACTIVE_ TINYINT,
    IS_CONCURRENT_ TINYINT,
    IS_SCOPE_ TINYINT,
    IS_EVENT_SCOPE_ TINYINT,
    SUSPENSION_STATE_ INTEGER,
    CACHED_ENT_STATE_ INTEGER,
    SEQUENCE_COUNTER_ BIGINT,
    TENANT_ID_ VARCHAR(64),
    PRIMARY KEY (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- Job Table
CREATE TABLE IF NOT EXISTS ACT_RU_JOB (
    ID_ VARCHAR(64) NOT NULL,
    REV_ INTEGER,
    TYPE_ VARCHAR(255) NOT NULL,
    LOCK_EXP_TIME_ DATETIME NULL,
    LOCK_OWNER_ VARCHAR(255),
    EXCLUSIVE_ BOOLEAN,
    EXECUTION_ID_ VARCHAR(64),
    ROOT_PROC_INST_ID_ VARCHAR(64),
    PROCESS_INSTANCE_ID_ VARCHAR(64),
    PROCESS_DEF_ID_ VARCHAR(64),
    PROCESS_DEF_KEY_ VARCHAR(255),
    RETRIES_ INTEGER,
    EXCEPTION_STACK_ID_ VARCHAR(64),
    EXCEPTION_MSG_ VARCHAR(4000),
    FAILED_ACT_ID_ VARCHAR(255),
    DUEDATE_ DATETIME NULL,
    REPEAT_ VARCHAR(255),
    REPEAT_OFFSET_ BIGINT DEFAULT 0,
    HANDLER_TYPE_ VARCHAR(255),
    HANDLER_CFG_ VARCHAR(4000),
    DEPLOYMENT_ID_ VARCHAR(64),
    SUSPENSION_STATE_ INTEGER NOT NULL DEFAULT 1,
    JOB_DEF_ID_ VARCHAR(64),
    PRIORITY_ BIGINT NOT NULL DEFAULT 0,
    SEQUENCE_COUNTER_ BIGINT,
    TENANT_ID_ VARCHAR(64),
    CREATE_TIME_ DATETIME,
    LAST_FAILURE_LOG_ID_ VARCHAR(64),
    PRIMARY KEY (ID_)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- Example index creation with corrected syntax
CREATE INDEX ACT_IDX_JOB_HANDLER ON ACT_RU_JOB(HANDLER_TYPE, HANDLER_CFG);

-- Additional tables and constraints (simplified for brevity)
-- Follow the same pattern of IF NOT EXISTS for CREATE TABLE and use corrected column names where needed.

-- Foreign key constraints
ALTER TABLE ACT_GE_BYTEARRAY
ADD CONSTRAINT ACT_FK_BYTEARR_DEPL FOREIGN KEY (DEPLOYMENT_ID_) REFERENCES ACT_RE_DEPLOYMENT(ID_);

ALTER TABLE ACT_RU_EXECUTION
ADD CONSTRAINT ACT_FK_EXE_PROCINST FOREIGN KEY (PROC_INST_ID_) REFERENCES ACT_RU_EXECUTION(ID_) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE ACT_RU_EXECUTION
ADD CONSTRAINT ACT_FK_EXE_PROCDEF FOREIGN KEY (PROC_DEF_ID_) REFERENCES ACT_RE_PROCDEF(ID_);
